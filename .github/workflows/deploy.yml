name: Build, Test and Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_CONFIGURATION: 'Release'
  IMAGE_NAME: 'bloodsugerhistory'
  DOCKER_HUB_NAMESPACE: 'iceinplanet' # Replace with your Docker Hub username
  AZURE_WEBAPP_NAME: 'bloodsugarhistory' # Replace with your Azure Web App name

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.17.0'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Restore backend dependencies
      working-directory: ./backend
      run: dotnet restore

    - name: Build backend
      working-directory: ./backend
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Start backend server
      working-directory: ./backend
      run: |
        dotnet run --no-build --urls "http://localhost:8080" &
        sleep 15  # Wait for server to start
      env:
        ASPNETCORE_ENVIRONMENT: Development
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=bloodsugar_test;Username=postgres;Password=password"

    # - name: Run Cypress tests
    #   working-directory: ./frontend
    #   run: npm run cypress:run
    #   env:
    #     CYPRESS_baseUrl: http://localhost:3000
    #     CYPRESS_apiUrl: http://localhost:8080

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test  # Only run if tests pass
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.17.0'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Start backend server
      working-directory: ./backend
      run: |
        dotnet run --no-build --urls "http://localhost:8080" &
        sleep 10  # Wait for server to start
      env:
        ASPNETCORE_ENVIRONMENT: Development
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=bloodsugar_test;Username=postgres;Password=password"

    # - name: Run Cypress tests
    #   working-directory: ./frontend
    #   run: npm run cypress:run
    #   env:
    #     # Set environment variables for Cypress
    #     CYPRESS_baseUrl: http://localhost:3000
    #     CYPRESS_apiUrl: http://localhost:8080

    - name: Restore backend dependencies
      working-directory: ./backend
      run: dotnet restore

    - name: Build backend
      working-directory: ./backend
      run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

    - name: Publish backend
      working-directory: ./backend
      run: dotnet publish --configuration ${{ env.BUILD_CONFIGURATION }} --output ./publish --no-build

    - name: Ensure wwwroot exists
      run: mkdir -p backend/publish/wwwroot

    - name: Copy frontend build to backend publish
      run: |
        cp -r frontend/build/* backend/publish/wwwroot/

    - name: Create deployment package
      run: |
        cd backend/publish
        zip -r ../../deployment-package.zip .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest

    # - name: Deploy to Azure Web App (ZIP)
    #   if: github.ref == 'refs/heads/main'
    #   uses: azure/webapps-deploy@v3
    #   with:
    #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
    #     package: ./deployment-package.zip
    #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

    - name: Deploy to Azure Web App (Container)
      if: github.ref == 'refs/heads/main'
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} 